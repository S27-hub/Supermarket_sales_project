-- # Create Database named portfolio_projects --

Create database portfolio_projects;

-- # Import table dowonloaded from kaggle and cleanned, formatted  and added a coloumn named Sales uisng the MS Excel --

-- # Imorted the table in MY_SQl named it "supermarket_sales" --


use portfolio_projects;

-- # to see the whole table at once uses the following query -- 

Select * from supermarket_sales;

-- # Finding the total Revenue generated from all category in round figure --
-- # Revenue from sales = 307587 --

Select Round(sum(Sales)) As revenue_from_sales
from supermarket_sales;

-- # Finding the different number of product line and total number of respective purchase we have in the supermarket---
-- # There are total six product lines and there respective purchase are as follows  --
-- # 1.Health and beauty = 152, 2. Electronic accessories = 170, 3. Home and lifestyle = 160 --
-- # 4.Food and beverages= 174 5.Food and beverages = 174 6. Food and beverages =174--

Select Product_line, count(*) 
From supermarket_sales
group by Product_line ;

-- # Finding the total revenue generated by different product line in desecnding order---
-- # It gives the value in desending order so, we can also find the product line which gives the highest and lowest number of sales--
-- # Highest sales = 53471,28 from Food and Beverages, Lowest sales = 46851.18 from health and Beauty --

Select Product_line, ROUND(sum(Sales),2) As total_sales
From  supermarket_sales
Group by Product_line
order by total_sales DESC;

-- # Finding the total sales gender wise --
-- # Female = 159888.5, Male = 147698.88 --

SELECT Gender, Round(sum(Sales),2) AS total_sales
FROM supermarket_sales
GROUP BY Gender
ORDER BY total_sales DESC;

-- # Finding the city from where the maximum customers are coming --
-- # Yangon is the city with maximum number of customers i.e. 340 --

SELECT City, COUNT(City)
FROM supermarket_sales
Group by City
Order by City DESC
LIMIT 1;

-- # finding the total Sales generated by the both customer types in Round figure --
-- # Member = 156403 and Normal = 151184

SELECT Customer_type, Round(Sum(Sales),0) AS total_sales
FROM supermarket_sales
GROUP BY Customer_type;

-- # Finding the total sales branch wise in round figure--
-- # A =101143, B= 105304, C=101141

SELECT Branch, Round(Sum(Sales),0) AS total_sales
FROM supermarket_sales
GROUP BY Branch;

-- # Finding the total tax collected from the sales --
-- # Total tax collected = 15379 --

SELECT round(SUM(Tax)) AS Total_tax_collected
FROM supermarket_sales;

-- # finding the total tax paid by the both customer types --
-- # Member = 7820, Normal = 7559 --

SELECT Customer_type, ROUND(SUM(Tax))
FROM supermarket_sales
GROUP BY Customer_type;

-- # Finding the total tax collected from different product_line + Find the highest tax collected category-- 
-- # Higest tax collected cateogry is Food and beverages --

SELECT Product_line, ROUND(SUM(Tax)) AS Total_tax
FROM supermarket_sales
GROUP BY Product_line
ORDER BY Total_tax DESC;

-- # Finding the maximum number of the quantity bought by a customer and respective category --
-- # In all the category, the maximum quantity bought was 10 --

SELECT Product_line , MAX(Quantity)
FROM supermarket_sales
GROUP BY Product_line;

-- # Finding the average number of the Quantity bought by different customer -- 
-- # Average number of the Quantity bought = 5.51 --

SELECT ROUND(AVG(Quantity),2)
FROM supermarket_sales;


-- # finding the top three priced items and their repsective category from the sales --
-- # 1. Health and beauty = 99.96 2. Electronic accessories =99.73 , 3. Home and lifestyle = 99.92

SELECT Product_line, MAX(Unit_price)
FROM supermarket_sales
GROUP BY Product_line
LIMIT 3;

-- # As executed above, we know that the highest sales is from the food and beverages category, so now we will see whoich type of customer buying how much --
-- # 1. MEMBER = 29864.4 , 2. Normal = 23606.88 --
-- # So we can conclude that customer having memebership is buying more than Normal customer (not having a membership) --

SELECT Customer_type, ROUND(SUM(Sales),2)
FROM supermarket_sales
WHERE Product_line = "Food and beverages"
GROUP BY Customer_type;

-- # Finding the invoice id of the customers who are coming from yangaon city and bought more than 5 quantity of product ---
-- # So there are 205 customers who are from yangon city and bought more than 5 quantity of different products --

SELECT Invoice_ID
FROM supermarket_sales
WHERE City = "Yangon" AND Quantity >= 5;

-- # Finding the highest three sales coming from which product line and from whihc types of customers along with the respective quantity --
-- # Top three sales are coming from the Fashion accessories = 993 (Member), Food and beverages = 985.2 (Member), Home and lifestyle = 975 (Normal)  --

SET sql_mode=(SELECT REPLACE(@@sql_mode,'ONLY_FULL_GROUP_BY',''));

SELECT Product_line, Customer_type, MAX(Sales) AS Highest_sale
FROM supermarket_sales
GROUP BY Product_line 
ORDER BY Highest_sale DESC
LIMIT 3;

-- # Finding which branch of which city is selling highest products -- 
-- # Highest Sales = 993 from Branch C --

SELECT Branch, City, MAX(Sales) AS Highest_sale
FROM supermarket_sales
GROUP BY City
ORDER BY Highest_sale DESC
LIMIT 1;

-- # Finding the average of the unit_price of the products that are available in branch A --
-- #  Average price per unit of the products in branch A is 55 --

SELECT ROUND(AVG(Unit_price)) As Average_price_per_unit
FROM supermarket_sales
WHERE Branch = "A"
GROUP BY Branch;



DROP table supermarket_sales;


